// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"

	storage "faroukelkholy/survey/internal/storage"
)

// Repository is an autogenerated mock type for the Repository type
type Repository struct {
	mock.Mock
}

// CreateSurvey provides a mock function with given fields: _a0, _a1
func (_m *Repository) CreateSurvey(_a0 context.Context, _a1 *storage.Survey) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *storage.Survey) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateSurveyForm provides a mock function with given fields: _a0, _a1
func (_m *Repository) CreateSurveyForm(_a0 context.Context, _a1 *storage.SurveyForm) error {
	ret := _m.Called(_a0, _a1)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *storage.SurveyForm) error); ok {
		r0 = rf(_a0, _a1)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetSurveysBySurveyFormID provides a mock function with given fields: ctx, surveyFormID
func (_m *Repository) GetSurveysBySurveyFormID(ctx context.Context, surveyFormID primitive.ObjectID) ([]*storage.Survey, error) {
	ret := _m.Called(ctx, surveyFormID)

	var r0 []*storage.Survey
	if rf, ok := ret.Get(0).(func(context.Context, primitive.ObjectID) []*storage.Survey); ok {
		r0 = rf(ctx, surveyFormID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*storage.Survey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, primitive.ObjectID) error); ok {
		r1 = rf(ctx, surveyFormID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
