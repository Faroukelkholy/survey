// Code generated by mockery 2.9.0. DO NOT EDIT.

package mocks

import (
	context "context"
	models "faroukelkholy/survey/internal/service/models"

	mock "github.com/stretchr/testify/mock"
)

// Service is an autogenerated mock type for the Service type
type Service struct {
	mock.Mock
}

// GetSurveysBySurveyFormID provides a mock function with given fields: ctx, surveyFormID
func (_m *Service) GetSurveysBySurveyFormID(ctx context.Context, surveyFormID string) ([]*models.Survey, error) {
	ret := _m.Called(ctx, surveyFormID)

	var r0 []*models.Survey
	if rf, ok := ret.Get(0).(func(context.Context, string) []*models.Survey); ok {
		r0 = rf(ctx, surveyFormID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]*models.Survey)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, surveyFormID)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SubmitSurvey provides a mock function with given fields: ctx, sv
func (_m *Service) SubmitSurvey(ctx context.Context, sv *models.Survey) error {
	ret := _m.Called(ctx, sv)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.Survey) error); ok {
		r0 = rf(ctx, sv)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// SubmitSurveyForm provides a mock function with given fields: ctx, sf
func (_m *Service) SubmitSurveyForm(ctx context.Context, sf *models.SurveyForm) error {
	ret := _m.Called(ctx, sf)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, *models.SurveyForm) error); ok {
		r0 = rf(ctx, sf)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
